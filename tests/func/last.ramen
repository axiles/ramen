-- vim: ft=sql expandtab

-- Check we will have the last two entries before 2000, and thus
-- making sure LATEST N include the current item:
DEFINE win1 AS
  FROM fixtures/earthquakes/csv
  WHERE year < 2000
  SELECT
    LATEST 2 n AS _lst,
    GET(0, _lst) AS last_but_one,
    GET(1, _lst) AS last_one;

-- With null values
DEFINE win2 AS
  FROM fixtures/cars/csv
  WHERE model starts with "A3"
  SELECT
    -- Will skip NULLs:
    LATEST 3 CO AS _lst,
    GET(0, _lst) AS third_to_last_co,
    GET(1, _lst) AS second_to_last_co,
    GET(2, _lst) AS last_one_co,
    LATEST 3 horsepower AS _hp,
    GET(0, _hp) AS third_to_last_hp,
    GET(1, _hp) AS second_to_last_hp,
    GET(2, _hp) AS last_one_hp,
    -- Will not skip NULLs:
    LATEST 3 keep nulls CO AS _lst_n,
    GET(0, _lst_n) AS third_to_last_co_n,
    GET(1, _lst_n) AS second_to_last_co_n,
    GET(2, _lst_n) AS last_one_co_n,
    LATEST 3 horsepower AS _hp_n,
    GET(0, _hp_n) AS third_to_last_hp_n,
    GET(1, _hp_n) AS second_to_last_hp_n,
    GET(2, _hp_n) AS last_one_hp_n;

-- check that LATEST 1 is the current element
DEFINE f3 AS
  FROM fixtures/earthquakes/csv
  SELECT
    LENGTH(LATEST 1 n) = 1 AS t1,
    GET(0, LATEST 1 n) = n AS t2,
    AVG(LATEST 1 n) = n AS t3,
    AVG(LATEST 1 float(not (n = 99999))) >= 1 AS t4;
