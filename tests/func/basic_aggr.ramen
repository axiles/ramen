-- vim: ft=sql expandtab

DEFINE f1 AS
  FROM fixtures/cars/csv
  SELECT
    min globally horsepower,
    max globally (horsepower),
    sum globally u32(horsepower),
    sum group globally u32(horsepower) as sum_horsepower_2,
    avg globally horsepower,
    avg group globally horsepower as avg_horsepower_2,
    -- Every aggregation functions must also accept lists as input:
    -- avg (group horsepower) AS avg_horsepower_2,
    first globally ((horsepower)),
    last globally horsepower,
    10th percentile (group globally horsepower) as horsepower_10th,
    95th percentile (group globally horsepower) as horsepower_95th,
    [ 10th; 95th ] percentile (group globally horsepower) as horsepower_perc,
    sum globally u16(distinct manufacturer) as manufacturers,
    round(sum globally CO) AS sum_CO,
    sum globally keep null CO as sum_CO_null
  COMMIT AFTER sum globally 1 >= 4539;

DEFINE a1 AS FROM fixtures/n123/csv SELECT AND globally b COMMIT AFTER sum globally 1 = 1;
DEFINE a2 AS FROM fixtures/n123/csv SELECT AND globally b COMMIT AFTER sum globally 1 = 2;
DEFINE a3 AS FROM fixtures/n123/csv SELECT AND globally b COMMIT AFTER sum globally 1 = 3;
DEFINE o1 AS FROM fixtures/n123/csv SELECT OR globally (not b) AS not_b COMMIT AFTER sum globally 1 = 1;
DEFINE o2 AS FROM fixtures/n123/csv SELECT OR globally (not b) AS not_b COMMIT AFTER sum globally 1 = 2;
DEFINE o3 AS FROM fixtures/n123/csv SELECT OR globally (not b) AS not_b COMMIT AFTER sum globally 1 = 3;

-- Check stateful functions in where clauses

DEFINE f2 AS SELECT n FROM fixtures/n123/csv WHERE lag n = 2;
