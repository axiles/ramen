-- vim: ft=sql expandtab
-- Example program to monitor some hosts via collectd

DEFINE collectd AS
  LISTEN FOR COLLECTD;

DEFINE memory PERSIST FOR 1d AS
  SELECT
    truncate(start, 30s) AS start,
    out.start + 30s AS stop,
    host,
    COALESCE (type_instance, "unknown") AS _type,
    AVG (IF _type = "free" THEN value) AS free,
    AVG (IF _type = "used" THEN value) AS used,
    AVG (IF _type = "cached" THEN value) AS cached,
    AVG (IF _type = "buffered" THEN value) AS buffered,
    AVG (IF _type LIKE "slab%" THEN value) AS slab
  FROM collectd
  WHERE COALESCE (plugin = "memory", false)
  GROUP BY host, start // 30
  COMMIT AFTER in.start > out.start + 30s
  FACTORS host;

DEFINE cpu PERSIST FOR 1d AS
  SELECT
    truncate(start, 30s) AS start,
    out.start + 30s AS stop,
    host,
    -- regexp extract the integer from the quotes, then cast to int:
    u16(instance) AS cpu_num,
    COALESCE (type_instance, "unknown") AS _type,
    AVG (IF _type = "user" THEN value) {jiffies} AS user,
    AVG (IF _type = "system" THEN value) {jiffies} AS system,
    AVG (IF _type = "nice" THEN value) {jiffies} AS nice,
    AVG (IF _type = "idle" THEN value) {jiffies} AS idle
  FROM collectd
  WHERE COALESCE (plugin = "cpu", false) AND COALESCE (type_name = "cpu", false)
  GROUP BY host, start // 30, instance
  COMMIT AFTER in.start > out.start + 30
  FACTORS host AND cpu_num;

DEFINE memory_alert AS
  FROM memory
  SELECT
    start, host,
    free + used + cached + buffered + slab AS total,
    free * 100 / total AS used_ratio,
    used_ratio > 50 AS firing
  GROUP BY host
  KEEP ALL AND NOTIFY "RAM is low"
  AFTER COALESCE (out.firing <> previous.firing, false);
